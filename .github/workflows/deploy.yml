name: Deploy via Dispatch

on:
  repository_dispatch:
    types: [deploy-service]

permissions:
  contents: write

jobs:
  update-deployment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Parse payload
        run: |
          echo "SERVICE=${{ github.event.client_payload.service }}" >> $GITHUB_ENV
          echo "ENV=${{ github.event.client_payload.env }}"         >> $GITHUB_ENV
          echo "TAG=${{ github.event.client_payload.image_tag }}"   >> $GITHUB_ENV

      - name: Update deployment file and push
        run: |
          set -euo pipefail

          DEPLOY_FILE="deployment/${SERVICE}-${ENV}.yml"
          echo "üîé Updating ${DEPLOY_FILE} to tag '${TAG}'"

          [ -f "$DEPLOY_FILE" ] || { echo "‚ùå Missing $DEPLOY_FILE"; exit 1; }

          # yq
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.44.1/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

          # Read current image from Deployment only
          CUR_IMAGE=$(yq 'select(.kind=="Deployment") | .spec.template.spec.containers[0].image' "$DEPLOY_FILE")
          [ -n "$CUR_IMAGE" ] && [ "$CUR_IMAGE" != "null" ] || { echo "‚ùå Could not read current image"; exit 1; }

          # Preserve repo, swap only tag
          if [[ "$CUR_IMAGE" == *:* ]]; then BASE="${CUR_IMAGE%:*}"; else BASE="$CUR_IMAGE"; fi
          export NEW_IMAGE="${BASE}:${TAG}"

          echo "OLD: $CUR_IMAGE"
          echo "NEW: $NEW_IMAGE"

          if [ "$CUR_IMAGE" = "$NEW_IMAGE" ]; then
            echo "‚ÑπÔ∏è Already at desired image. Nothing to change."
            exit 0
          fi

          # Update ONLY the Deployment doc
          yq -i 'select(.kind=="Deployment").spec.template.spec.containers[0].image = strenv(NEW_IMAGE)' "$DEPLOY_FILE"

          echo "üîÅ Diff:"
          git --no-pager diff -- "$DEPLOY_FILE" || true

          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "$DEPLOY_FILE"
          git commit -m "chore: deploy ${SERVICE} to ${ENV} @ ${TAG} [skip ci]" || { echo "‚ÑπÔ∏è No changes to commit"; exit 0; }
          git push
